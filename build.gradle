plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.3'
	id 'io.spring.dependency-management' version '1.1.3'
	id 'org.openapi.generator' version '5.4.0'
	id 'io.freefair.lombok' version '8.3'
	id "org.flywaydb.flyway" version "9.22.1"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

//sourceSets {
//	main {
//		java {
//			srcDirs += ["build/generate-resources/main/src/main/java/com/example/springreactiveopenapicodegen"]
//		}
//	}
//}

dependencies {
//	implementation files("build/generate-resources/main/src/main/java/com/example/springreactiveopenapicodegen")
//	implementation 'org.openapitools:jackson-databind-nullable:0.2.4'
//	implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.data:spring-data-r2dbc:3.1.2'
	implementation 'org.jetbrains:annotations:24.0.0'
	implementation 'org.postgresql:postgresql:42.6.0'

//	this alone should work for servlet
//	implementation 'org.springframework.boot:spring-boot-starter-websocket:1.5.22.RELEASE'
//	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

	// trying to get open api webflux working
	implementation 'org.springframework.boot:spring-boot-starter-websocket:3.1.2'
	implementation 'org.springdoc:springdoc-openapi-webflux-ui:1.7.0'


//	implementation 'io.swagger.core.v3:swagger-annotations:2.2.6'
//	implementation 'javax.validation:validation-api:2.0.1.Final'
//	implementation 'javax.annotation:javax.annotation-api:1.3.2'

	// https://mvnrepository.com/artifact/org.springdoc/springdoc-openapi-webflux-ui
//	// https://mvnrepository.com/artifact/io.swagger.core.v3/swagger-core
//	implementation 'io.swagger.core.v3:swagger-core:2.2.15'


//	runtimeOnly 'org.postgresql:postgresql'
	runtimeOnly 'org.postgresql:r2dbc-postgresql:1.0.2.RELEASE'
//	testImplementation 'org.springframework.boot:spring-boot-starter-test'
//	testImplementation 'io.projectreactor:reactor-test'
//	compileOnly 'org.projectlombok:lombok'
//	developmentOnly 'org.springframework.boot:spring-boot-devtools'
//	annotationProcessor 'org.projectlombok:lombok'
}

tasks.named('test') {
	useJUnitPlatform()
}

flywayMigrate {
	// Database URL, username, and password
	url = 'jdbc:postgresql://localhost:5432/spring_reactive'
	user = 'postgres'
	password = 'password'
	baselineOnMigrate = true
	// Locations of SQL migration scripts
	//	locations = ["filesystem:src/main/resources/db/migration"]
	// ['classpath:db/migration']
	// Baseline (optional)
	//	driver = 'org.postgresql.Driver'
}
tasks.bootRun {
	dependsOn ':flywayMigrate'
}


//openApiGenerate {
//	inputSpec.set("$rootDir/src/main/resources/api/api.yaml")
//	generatorName.set('spring')
//	packageName.set("${project.group}.springreactiveopenapicodegen")
//	apiPackage.set("${project.group}.springreactiveopenapicodegen.api.v1")
//	modelPackage.set("${project.group}.springreactiveopenapicodegen.dto")
//	generateApiTests.set(false)
//	generateModelTests.set(false)
//	modelNameSuffix.set('DTO')
//	library.set('spring-boot')
//	skipValidateSpec.set(false)
//	globalProperties.set([
//			supportingFiles: "ApiUtil.java",
//			apis: '',
//			models: ''])
//	configOptions.set([
//			reactive: "true",
//			delegatePattern: "true",
////			generateSupportingFiles: "false",
//			interfaceOnly: "true",
//			dateLibrary: "java8",
//			sourceFolder: "src/main/java",
//			additionalModelTypeAnnotations:
//					"@lombok.Builder @lombok.NoArgsConstructor @lombok.AllArgsConstructor",
//			useTags: "true"])
//}

//tasks.compileJava {
//	dependsOn ':openApiGenerate'
//}

// suspicious things

//	implementation "org.flywaydb:flyway-gradle-plugin:9.22.1"
// ^^^ this line causes the problem with the class not having the specific implementation