plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.3'
	id 'io.spring.dependency-management' version '1.1.3'
	id 'org.openapi.generator' version '5.4.0'
	id 'io.freefair.lombok' version '8.3'
	id "org.flywaydb.flyway" version "9.22.1"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

sourceSets {
	main {
		java {
			srcDirs += ["build/generate-resources/main/src/main/java/com/example/springreactiveopenapicodegen"]
		}
	}
}

dependencies {
	implementation files("build/generate-resources/main/src/main/java/com/example/springreactiveopenapicodegen")
	implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.jetbrains:annotations:24.0.0'
	implementation 'io.swagger.core.v3:swagger-annotations:2.2.6'
	implementation 'org.openapitools:jackson-databind-nullable:0.2.4'
	implementation 'javax.validation:validation-api:2.0.1.Final'
	implementation 'javax.annotation:javax.annotation-api:1.3.2'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	compileOnly 'org.projectlombok:lombok:1.18.28'
	annotationProcessor 'org.projectlombok:lombok:1.18.28'
	implementation 'org.postgresql:postgresql:42.6.0'
	implementation "org.flywaydb:flyway-gradle-plugin:9.22.1"
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.compileJava {
	dependsOn ':openApiGenerate'
}

tasks.bootRun {
	dependsOn ':flywayMigrate'
}

flywayMigrate {
	// Database URL, username, and password
	url = 'jdbc:postgresql://localhost:5432/spring_reactive'
	user = 'postgres'
	password = 'password'
	// Locations of SQL migration scripts
	locations = ['classpath:db/migration']
	// Baseline (optional)
	baselineOnMigrate = true
}

openApiGenerate {
	inputSpec.set("$rootDir/src/main/resources/api/api.yaml")
	generatorName.set('spring')
	packageName.set("${project.group}.springreactiveopenapicodegen")
	apiPackage.set("${project.group}.springreactiveopenapicodegen.api.v1")
	modelPackage.set("${project.group}.springreactiveopenapicodegen.dto")
	generateApiTests.set(false)
	generateModelTests.set(false)
	modelNameSuffix.set('DTO')
	library.set('spring-boot')
	skipValidateSpec.set(false)
	globalProperties.set([
			supportingFiles: "ApiUtil.java",
			apis: '',
			models: ''])
	configOptions.set([
			reactive: "true",
			delegatePattern: "true",
//			generateSupportingFiles: "false",
			interfaceOnly: "true",
			dateLibrary: "java8",
			sourceFolder: "src/main/java",
			additionalModelTypeAnnotations:
					"@lombok.Builder @lombok.NoArgsConstructor @lombok.AllArgsConstructor",
			useTags: "true"])}